var TcHmi;!function(t){!function(t){!function(t){class i extends t.LineAreaChannel{constructor(t,i,e,s,n,o,l,_,a){super(t,i,e,s,n,o,l,_,a),this.__options=a}drawChannel(i,e=5,s=0){let n=[],o=[],l=-1,_=-1;const a=i.length>=2?i[1].timestamp-i[0].timestamp:0;for(let h=0;h<i.length;h++){const c=i[h],r=Math.round((c.timestamp-s)*this.__xStepDistance+this.__offsetLeft);if(null==c.values[0]){l=c.timestamp;continue}if(-1!=l&&c.timestamp-a!=l&&_<r-e){this.__createLinie(n,!1),n=[],this.__options.fillMode==t.EFillMode.FILL&&(this.__createLinie(o,!0),o=[]),l=c.timestamp,_=r;continue}_=r,l=c.timestamp;const p=Math.round(this.__offsetTop-c.values[0]*this.__yStepDistance);let m=this.__createPoint(r,p,!1);0==n.length&&(n=this.__createPointsList(r,p,!1),this.__options.fillMode==t.EFillMode.FILL&&(o=this.__createPointsList(r,p,!0))),n.push(m),this.__options.fillMode==t.EFillMode.FILL&&o.push(this.__createPoint(r,p,!0))}this.__createLinie(n,!1),this.__options.fillMode==t.EFillMode.FILL&&this.__createLinie(o,!0)}}t.YIntervalChannel=i}(t.Analytics||(t.Analytics={}))}(t.Controls||(t.Controls={}))}(TcHmi||(TcHmi={}));