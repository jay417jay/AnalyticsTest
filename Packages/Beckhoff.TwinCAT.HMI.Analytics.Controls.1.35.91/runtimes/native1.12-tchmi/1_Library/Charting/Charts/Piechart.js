var TcHmi;!function(t){!function(t){!function(t){class e extends t.BaseChart{constructor(t,e,s){super(t,e,s),this.__elPieLabels=[],this.__options=s}clearChart(){}createInitChart(){this.__preCreateInitChart(),this.createChart(this.__initData),this.__postCreateInitChart(),this.__elPieLabels.forEach(t=>{t.removeFromParent()}),this.__elPieLabels=[]}createChart(e){var s;if(this.__channelValues=[],this.__preCreateChart(e),null==this.__options.timeranges||0===this.__options.timeranges.length)return void console.error("No timerange added to bar chart");this.__createChartBackground();const n=this.__options.timeranges.filter(t=>!1===t.isVisible).length,i=t.GridCreator.calculateGrid(this.__options.timeranges.length-n,this.__props.svgWidth,this.__props.svgHeight);if(this.__gridEdgeLength=Math.min(this.__props.svgWidth/i.columns,this.__props.svgHeight/i.rows),this.__gridEdgeLength<=0)return;let a=0;this.__createBackgroundRectangle(0,0,i.columns*this.__gridEdgeLength-this.__props.defaultAxisMargin,i.rows*this.__gridEdgeLength);for(let n=0;n<this.__options.timeranges.length;n++){const o=this.__options.timeranges[n];if(!o.isVisible)continue;const l=t.GridCreator.calcRowAndColumn(a,i.columns),h=this.__gridEdgeLength*(l.columns-.5),_=this.__gridEdgeLength*(l.rows-.5);this.__normalRadius=this.__gridEdgeLength/2.5,a++;const r={};r.offsetLeft=h,r.offsetTop=_,r.channels=[],r.data=[];const c=this.__channelDataValues.filter(t=>t.timerange==o),u=[];for(const t of c)u.push(...t.channelData);if(null==c||0===c.length)continue;const g=this.__calculateSumInCalculation(u);let p=0;for(let n=0;n<this.__options.data.symbols.length;n++){let i=null===(s=this.__channelDataValues.find(t=>t.timerange==o&&t.channelConfig==this.__options.channelConfigurations[n]))||void 0===s?void 0:s.channelData;if(null!=i&&0!=i.length&&this.__options.channelConfigurations[n].isVisible){const s=new t.PieChannel(e.symbols[n],this.__elChartBackground,this.__props,h,_,this.__normalRadius,p,this.__options.isRingChart,this.__options.channelConfigurations[n],this.__options);if(s.drawChannel(i,g),p=s.pieOffsetCum,this.__channels.push(s),r.channels.push(s),-1==r.data.findIndex(t=>t.timestamp==i[i.length-1].timestamp)){const t={timestamp:i[i.length-1].timestamp,values:[]};r.data.push(t)}r.data.find(t=>t.timestamp==i[i.length-1].timestamp).values[n]=i[i.length-1].values[0]}}if(u.length>0){const e=u[u.length-1];this.__channelValues.push(r);const s=this.__gridEdgeLength*l.rows,n=new t.SVGText(h,s,new t.SPTime(e.timestamp).toString(t.E_TimeFormat.yyyy_mm_dd_hh_mm_ss_mmm),["tchmi-analytics-charting-axis-label-text"]);n.appendTo(this.__backgroundRects[0].elGroup),n.x-=n.width/2,n.y-=n.height,this.__elPieLabels.push(n)}}this.__channelValues.sort((t,e)=>t.offsetLeft<e.offsetLeft?1:-1);const o=new t.Point(0,0),l=new t.Point(this.__props.svgWidth,this.__props.svgHeight);this.__postCreateChart(o,l)}__createChannelValues(){const e=JSON.parse(JSON.stringify(this.__options.data));this.__channelDataValues=[];for(const s of this.__options.timeranges){if(!s.isVisible)continue;const n=t.TimeConverter.getFromTcTime(s,this.__props.dataRequestTime),i=t.TimeConverter.getToTcTime(s,this.__props.dataRequestTime);for(let t=0;t<this.__options.data.symbols.length;t++){let a=e.data.map(e=>Object.assign(Object.assign({},e),{values:[e.values[t]]}));if(a=a.filter(t=>t.timestamp<=i&&t.timestamp>=n&&null!=t.values[0]),0==a.length)continue;const o=a[a.length-1];if(this.__options.showDifferentials){const t=a[0];o.values[0]=o.values[0]-t.values[0]}const l={};l.timerange=s,l.channelConfig=this.__options.channelConfigurations[t],l.channelData=[o],this.__channelDataValues.push(l)}}}cleanElement(){super.cleanElement(),this.__elPieLabels.forEach(t=>{t.removeFromParent()}),this.__elPieLabels=[]}__calculateSum(t){let e=0;for(let s=0;s<t.length;s++)for(let n=0;n<this.__options.channelConfigurations.length;n++){const i=t[s].values[n];i>=0&&this.__options.channelConfigurations[n].isVisible&&(e+=i)}return e}__calculateSumInCalculation(t){let e=0;for(let s=0;s<t.length;s++){const n=t[s].values[0];n>=0&&this.__options.channelConfigurations[s].isVisible&&(e+=n)}return e}getValues(e,s){var n,i,a;this.__channelValues.forEach(t=>t.channels.forEach(t=>t.updateChannelProperties(this.__normalRadius,1)));let o=Number.MAX_VALUE,l=null;for(const t of this.__channelValues){const n=Math.sqrt(Math.pow(e-t.offsetLeft,2)+Math.pow(s-t.offsetTop,2));n<o&&(o=n,l=t)}if(null!=l&&o<l.channels[0].radius){const o=e-l.offsetLeft,h=s-l.offsetTop;let _=Math.atan2(h,o);_=(_+2*Math.PI)%(2*Math.PI);const r=(_*(180/Math.PI)+90)%360/360,c=this.__calculateSum(l.data);let u=0,g=null,p=!1,m=0,f=0;for(const e of l.data[0].values)null!=e?(u+=e>=0&&this.__options.channelConfigurations[f].isVisible?e/c:0,null!=e&&u>r&&!p?(this.__options.isRingChart||null===(n=l.channels[f-m])||void 0===n||n.updateChannelProperties(1.05*this.__normalRadius,1),p=!0,g=null===(i=l.channels[f-m])||void 0===i?void 0:i.symbol):null===(a=l.channels[f-m])||void 0===a||a.updateChannelProperties(this.__normalRadius,.3),m+=this.__options.channelConfigurations[f].isVisible||this.__options.channelConfigurations[f].sourceID==t.Guid.EMPTY_GUID?0:1,f++):(m++,f++);return l.data.map(t=>Object.assign(Object.assign({},t),{hoverChannel:g}))}return[]}}t.PieRingChart=e}(t.Analytics||(t.Analytics={}))}(t.Controls||(t.Controls={}))}(TcHmi||(TcHmi={}));