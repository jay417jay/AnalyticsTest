var TcHmi;!function(e){!function(t){!function(t){class a extends t.LayoutElement{constructor(e,t,a){super(e,t),this.__undoRedoManager=a}storeDashboardLayout(e){const a=new t.UserDataStoreCmd;a.tableName="UserLayoutStore",a.cmdType=t.I_SE_TableCmdType.SET,a.cmdData=JSON.stringify(e);const r={requestType:"ReadWrite",commands:[{symbol:"TcHmiAnalytics.SetUserData",readValue:"",writeValue:JSON.stringify(a),commandOptions:["SendErrorMessage","SendWriteValue"]}]};this.__requestExtSymbol(r)}requestDashboardLayout(e,a){const r=new t.UserDataStoreCmd;r.tableName="UserLayoutStore",r.cmdType=t.I_SE_TableCmdType.GET,r.cmdData=e,this.__userLayoutKeyOld=a;const o={requestType:"ReadWrite",commands:[{symbol:"TcHmiAnalytics.GetUserData",readValue:"",writeValue:JSON.stringify(r),commandOptions:["SendErrorMessage","SendWriteValue"]}]};this.__requestExtSymbol(o)}__requestExtSymbol(a){let r=this;return e.Server.isWebsocketReady()?e.Server.requestEx(a,{parallel:!0},(function(a){let o=a.response;if(!o||null!=o.error)return void console.log("error with server-extension communication in LayoutStoreHandler");let s=o.commands;if(void 0!==s)for(let o=0,n=s.length;o<n;o++){let n=s[o];if("TcHmiAnalytics.GetUserData"===n.symbol){if(0===a.error&&"0"!==String(n.readValue)&&""!==String(n.readValue)&&"Get Layout failed"!==String(n.readValue)){const e=String(n.readValue);r.dispatchEvent(new CustomEvent(t.EventNames.layoutReceived,{detail:e}))}else{if(null!=r.__userLayoutKeyOld)return void r.requestDashboardLayout(r.__userLayoutKeyOld,null);r.dispatchEvent(new CustomEvent(t.EventNames.layoutReceived,{detail:null}))}r.__undoRedoManager.reset(),r.__undoRedoManager.addNewLayoutChange(r.__layout.getCurrentLayoutWithoutBuffer())}else"TcHmiAnalytics.SetUserData"==n.symbol&&("Updated full layout successfully"==String(n.readValue)?(r.dispatchEvent(new CustomEvent(t.EventNames.layoutStored,{detail:!0})),t.Utilities.deletePersistentData(`AnalyticsKey_${r.__layoutProps.userLayoutKey}`,t.StorageType.LocalStorage)):r.dispatchEvent(new CustomEvent(t.EventNames.layoutStored,{detail:!1})));if(null!=n.error)return void console.log("error with server-extension command");e.Log.debug(n.symbol+"="+n.readValue)}})):console.error("No request send, because websocket connection not ready!"),r}}t.LayoutStoreHandler=a}(t.Analytics||(t.Analytics={}))}(e.Controls||(e.Controls={}))}(TcHmi||(TcHmi={}));